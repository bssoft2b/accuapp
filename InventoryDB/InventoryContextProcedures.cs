// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.Data.SqlClient;
using System;
using System.Threading;
using System.Threading.Tasks;
using InventoryDB;

namespace InventoryDB
{
    public static class InventoryContextProceduresExtensions
    {
        public static InventoryContextProcedures GetProcedures(this InventoryContext context)
        {
            return new InventoryContextProcedures(context);
        }
    }

    public partial class InventoryContextProcedures
    {
        private readonly InventoryContext _context;

        public InventoryContextProcedures(InventoryContext context)
        {
            _context = context;
        }

        public async Task<sp_get_swab_countResult[]> sp_get_swab_countAsync(string Account, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "Account",
                    Size = 100,
                    Value = Account ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<sp_get_swab_countResult>("EXEC @returnValue = [dbo].[sp_get_swab_count] @Account", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
