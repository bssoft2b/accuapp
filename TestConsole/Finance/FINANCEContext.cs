// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TestConsole.Finance
{
    public partial class FINANCEContext : DbContext
    {
        public FINANCEContext()
        {
        }

        public FINANCEContext(DbContextOptions<FINANCEContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ReportRowStatus> ReportRowStatus { get; set; }
        public virtual DbSet<ReportRowStatusDetail> ReportRowStatusDetail { get; set; }
        public virtual DbSet<ReportSettings> ReportSettings { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=bssoft2b;Initial Catalog=FINANCE;Persist Security Info=True;User ID=sa;Password=Xamarin@1964");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReportRowStatus>(entity =>
            {
                entity.HasOne(d => d.Report)
                    .WithMany(p => p.ReportRowStatuses)
                    .HasForeignKey(d => d.ReportId)
                    .HasConstraintName("FK_ReportRowStatus_ReportSettings");
            });

            modelBuilder.Entity<ReportRowStatusDetail>(entity =>
            {
                entity.HasOne(d => d.ReportRowStatus)
                    .WithMany(p => p.ReportRowStatusDetails)
                    .HasForeignKey(d => d.ReportRowStatusId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ReportRowStatusDetail_ReportRowStatus");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}